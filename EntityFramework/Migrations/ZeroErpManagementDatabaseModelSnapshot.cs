// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Verdant.Zero.Erp.Api.Data.EntityFramework;

namespace Verdant.Zero.Erp.Api.EntityFramework.Migrations
{
    [DbContext(typeof(ZeroErpManagementDatabase))]
    partial class ZeroErpManagementDatabaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("Verdant.Zero.Erp.Api.DataModel.Entities.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateUpdated");

                    b.Property<string>("Name");

                    b.Property<int>("PurchasedApplications");

                    b.HasKey("AccountId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Verdant.Zero.Erp.Api.DataModel.Entities.Address", b =>
                {
                    b.Property<int?>("AddressId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Attention");

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Fax");

                    b.Property<string>("Phone");

                    b.Property<string>("State");

                    b.Property<string>("Street1");

                    b.Property<string>("Street2");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<string>("UpdatedBy");

                    b.Property<string>("ZipCode");

                    b.HasKey("AddressId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Verdant.Zero.Erp.Api.DataModel.Entities.Contact", b =>
                {
                    b.Property<int?>("ContactId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("BillingAddressId");

                    b.Property<string>("CompanyName");

                    b.Property<string>("ContactType");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("CustomerType");

                    b.Property<string>("DisplayName");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Mobile");

                    b.Property<string>("Notes");

                    b.Property<string>("Salutation");

                    b.Property<int?>("ShippingAddressId");

                    b.Property<int?>("TaxAndPaymentDetailTaxAndPaymentId");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<string>("UpdatedBy");

                    b.Property<string>("Website");

                    b.Property<string>("WorkPhone");

                    b.HasKey("ContactId");

                    b.HasIndex("BillingAddressId");

                    b.HasIndex("ShippingAddressId");

                    b.HasIndex("TaxAndPaymentDetailTaxAndPaymentId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("Verdant.Zero.Erp.Api.DataModel.Entities.Inventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("AccountingCommittedStock");

                    b.Property<double>("AccountingStockAvailForSale");

                    b.Property<double>("AccountingStockOnHand");

                    b.Property<double>("PhysicalCommittedStock");

                    b.Property<double>("PhysicalStockAvailForSale");

                    b.Property<double>("PhysicalStockOnHand");

                    b.Property<int>("ProductCode");

                    b.Property<string>("WarehouseCode");

                    b.HasKey("Id");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("Verdant.Zero.Erp.Api.DataModel.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Brand");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Ean");

                    b.Property<string>("ImagePath");

                    b.Property<byte>("IsReturnable")
                        .HasColumnType("TINYINT(1)");

                    b.Property<string>("Isbn");

                    b.Property<string>("ItemType");

                    b.Property<string>("Manufacturer");

                    b.Property<string>("Mpn");

                    b.Property<string>("Name");

                    b.Property<string>("Sku");

                    b.Property<string>("Uom");

                    b.Property<string>("Upc");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<string>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Verdant.Zero.Erp.Api.DataModel.Entities.TaxAndPaymentDetails", b =>
                {
                    b.Property<int?>("TaxAndPaymentId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CurrencyCode");

                    b.Property<string>("PaymentTersm");

                    b.HasKey("TaxAndPaymentId");

                    b.ToTable("TaxAndPayments");
                });

            modelBuilder.Entity("Verdant.Zero.Erp.Api.DataModel.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccountId");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateLastLogin");

                    b.Property<DateTime>("DateUpdated");

                    b.Property<string>("EmailAddress");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Password");

                    b.Property<string>("PasswordSalt");

                    b.Property<int>("UserTypeId");

                    b.HasKey("UserId");

                    b.HasIndex("AccountId");

                    b.HasIndex("EmailAddress")
                        .IsUnique();

                    b.HasIndex("UserTypeId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Verdant.Zero.Erp.Api.DataModel.Entities.UserType", b =>
                {
                    b.Property<int>("UserTypeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.HasKey("UserTypeId");

                    b.ToTable("UserTypes");
                });

            modelBuilder.Entity("Verdant.Zero.Erp.Api.DataModel.Entities.Contact", b =>
                {
                    b.HasOne("Verdant.Zero.Erp.Api.DataModel.Entities.Address", "BillingAddress")
                        .WithMany()
                        .HasForeignKey("BillingAddressId");

                    b.HasOne("Verdant.Zero.Erp.Api.DataModel.Entities.Address", "ShippingAddress")
                        .WithMany()
                        .HasForeignKey("ShippingAddressId");

                    b.HasOne("Verdant.Zero.Erp.Api.DataModel.Entities.TaxAndPaymentDetails", "TaxAndPaymentDetail")
                        .WithMany()
                        .HasForeignKey("TaxAndPaymentDetailTaxAndPaymentId");
                });

            modelBuilder.Entity("Verdant.Zero.Erp.Api.DataModel.Entities.Product", b =>
                {
                    b.OwnsOne("Verdant.Zero.Erp.Api.DataModel.Entities.Dimension", "Dimension", b1 =>
                        {
                            b1.Property<int>("ProductId");

                            b1.Property<double>("Height");

                            b1.Property<double>("Length");

                            b1.Property<double>("Weight");

                            b1.Property<double>("Width");

                            b1.HasKey("ProductId");

                            b1.ToTable("Products");

                            b1.HasOne("Verdant.Zero.Erp.Api.DataModel.Entities.Product")
                                .WithOne("Dimension")
                                .HasForeignKey("Verdant.Zero.Erp.Api.DataModel.Entities.Dimension", "ProductId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("Verdant.Zero.Erp.Api.DataModel.Entities.InventoryAccount", "InventoryAccount", b1 =>
                        {
                            b1.Property<int>("Id");

                            b1.Property<string>("Name");

                            b1.Property<double>("OpeningStock");

                            b1.Property<double>("OpeningStockValuePerUnit");

                            b1.HasKey("Id");

                            b1.ToTable("Products");

                            b1.HasOne("Verdant.Zero.Erp.Api.DataModel.Entities.Product")
                                .WithOne("InventoryAccount")
                                .HasForeignKey("Verdant.Zero.Erp.Api.DataModel.Entities.InventoryAccount", "Id")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("Verdant.Zero.Erp.Api.DataModel.Entities.PurchaseInformation", "PurchaseInformation", b1 =>
                        {
                            b1.Property<int>("ProductId");

                            b1.Property<string>("Account");

                            b1.Property<string>("Description");

                            b1.Property<double>("PurchasePrice");

                            b1.HasKey("ProductId");

                            b1.ToTable("Products");

                            b1.HasOne("Verdant.Zero.Erp.Api.DataModel.Entities.Product")
                                .WithOne("PurchaseInformation")
                                .HasForeignKey("Verdant.Zero.Erp.Api.DataModel.Entities.PurchaseInformation", "ProductId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("Verdant.Zero.Erp.Api.DataModel.Entities.SalesInformation", "SalesInformation", b1 =>
                        {
                            b1.Property<int>("ProductId");

                            b1.Property<string>("Account");

                            b1.Property<string>("Description");

                            b1.Property<double>("SellingPrice");

                            b1.HasKey("ProductId");

                            b1.ToTable("Products");

                            b1.HasOne("Verdant.Zero.Erp.Api.DataModel.Entities.Product")
                                .WithOne("SalesInformation")
                                .HasForeignKey("Verdant.Zero.Erp.Api.DataModel.Entities.SalesInformation", "ProductId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("Verdant.Zero.Erp.Api.DataModel.Entities.User", b =>
                {
                    b.HasOne("Verdant.Zero.Erp.Api.DataModel.Entities.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Verdant.Zero.Erp.Api.DataModel.Entities.UserType", "UserType")
                        .WithMany()
                        .HasForeignKey("UserTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
